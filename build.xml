<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="compile" name="Rennschnecke_Example">
    <property environment="env"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.5"/>
    <property name="source" value="1.5"/>
    <path id="JUnit 3.libraryclasspath">
        <pathelement location="../../../../usr/share/eclipse/dropins/jdt/plugins/org.junit_3.8.2.dist/junit.jar"/>
    </path>
    <path id="Rennschnecke_Example.classpath">
        <pathelement location="bin"/>
        <path refid="JUnit 3.libraryclasspath"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project,junitreport" name="compile"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="Rennschnecke_Example.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target name="run">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="RennschneckeTest" todir="${junit.output.dir}"/>
            <classpath refid="Rennschnecke_Example.classpath"/>
        </junit>
    </target>
    <target name="RennenTest">	
        <mkdir dir="${junit.output.dir}"/>
    	<junit fork="yes" printsummary="withOutAndErr" errorProperty="RennenTest.failed" failureProperty="RennenTest.failed" logfailedtests="yes">
            <formatter type="xml"/>
            <test name="RennenTest" todir="/var/lib/jenkins/jobs/Rennschnecke-Job/workspace/reports/"/>
            <classpath refid="Rennschnecke_Example.classpath"/>
        </junit>
      	<fail message="Tests failed. Please see test reports" if="RennenTest.failed" />
    </target>
    <target name="AllTests">
        <parallel threadCount="1" timeout="900000">
            <antcall target="RennenTest"/>
            <antcall target="RennschneckeTest"/>
        </parallel>
    </target>
    <target name="RennschneckeTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr" errorProperty="RennschneckeTest.failed" failureProperty="RennschneckeTest.failed" logfailedtests="yes">
            <formatter type="xml"/>
            <test name="RennschneckeTest" todir="/var/lib/jenkins/jobs/Rennschnecke-Job/workspace/reports/"/>
            <classpath refid="Rennschnecke_Example.classpath"/>
        </junit>
    	<fail message="Tests failed. Please see test reports" if="RennschneckeTest.failed" />		
    </target>
    <target depends="AllTests" name="junitreport">
        <junitreport todir="/var/lib/jenkins/jobs/Rennschnecke-Job/workspace/reports/">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>